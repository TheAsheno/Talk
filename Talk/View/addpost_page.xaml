<Page x:Class="Talk.View.addpost_page"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Talk.View"
      mc:Ignorable="d" 
      d:DesignHeight="418" d:DesignWidth="500"
      Title="addpost_page">
    <Page.Triggers>
        <EventTrigger RoutedEvent="Page.Loaded">
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:.35" Storyboard.TargetProperty="Opacity" From="0" To="1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
        </EventTrigger>
        <EventTrigger RoutedEvent="Unloaded">
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:.35" Storyboard.TargetProperty="Opacity" From="1" To="0" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
        </EventTrigger>
    </Page.Triggers>
    <Page.Resources>
        <!--Combox-->
        <Style TargetType="{x:Type ComboBox}" x:Key="cmbstyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <!--ComBoxItem-->
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="MinHeight" Value="22"></Setter>
                        <Setter Property="MinWidth" Value="60"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border Name="Back" Background="Transparent"  BorderThickness="0,0,0,0" BorderBrush="#81D779" >
                                        <ContentPresenter  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"></ContentPresenter>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Back" Property="Background" Value="LightGray"></Setter>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter TargetName="Back" Property="Background" Value="LightGray"></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Border BorderThickness="0" CornerRadius="3" Width="100" Height="30" Background="{TemplateBinding Background}" >
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" x:Name="grid">
                                    <ToggleButton
                                        Width="{Binding ElementName=grid,Path=ActualWidth}"
                                        Height="{Binding ElementName=grid, Path=ActualHeight}"
                                        Content="{TemplateBinding Text}" VerticalAlignment="Center"
                                        HorizontalAlignment="Left" Margin="5,0,0,0"
                                        BorderThickness="0"
                                        Foreground="{TemplateBinding Foreground}"
                                        Background="{TemplateBinding Background}"
                                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"
                                        >
                                        <ToggleButton.Style >
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Background" Value="White"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border   Background="{TemplateBinding Background}" BorderThickness="0"  >
                                                                <TextBlock Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" Margin="4 0 0 0"  HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="White"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter Property="Background" Value="White"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>

                                <Grid Grid.Column="1" >
                                    <ToggleButton IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  ClickMode="Press">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Background" Value="White"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                                                <Grid>
                                                                    <TextBlock Foreground="{TemplateBinding Foreground}" x:Name="arrow_tb" Text="&#xe626;" FontFamily="pack://application:,,,/Talk;component/Asset/fonts/#iconfont" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                                                        <TextBlock.RenderTransform>
                                                                            <TransformGroup>
                                                                                <ScaleTransform/>
                                                                                <SkewTransform/>
                                                                                <RotateTransform/>
                                                                                <TranslateTransform/>
                                                                            </TransformGroup>
                                                                        </TextBlock.RenderTransform>
                                                                    </TextBlock>
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">

                                                                </Trigger>
                                                                <EventTrigger RoutedEvent="Checked">
                                                                    <BeginStoryboard>
                                                                        <Storyboard >
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="arrow_tb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                                                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="180"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>

                                                                <EventTrigger RoutedEvent="Unchecked">
                                                                    <BeginStoryboard>
                                                                        <Storyboard >
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="arrow_tb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="180"/>
                                                                                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>
                                <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                    <Border CornerRadius="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" x:Name="DropDown" SnapsToDevicePixels="True" Width="100">
                                        <Border.Effect>
                                            <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                        </Border.Effect>
                                        <ScrollViewer Margin="4,6,4,6" Style="{DynamicResource ScrollViewerStyle}" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                            <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="-1" Opacity="0.3" Color="#FF969696" BlurRadius="5"/>
                            </Border.Effect>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid Background="#f5f5f5" Opacity="0.8">
        <StackPanel Margin="40 20">
            <TextBlock Text="发布帖子" Style="{StaticResource titleText}" Foreground="Black" FontSize="20"/>
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="&#xe61a;" FontFamily="pack://application:,,,/Talk;component/Asset/fonts/#iconfont" FontSize="25" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="1" Padding="10" Text="版块" Style="{StaticResource normalText}" Foreground="Black" HorizontalAlignment="Left"/>
                <ComboBox Grid.Column="2" Style="{StaticResource cmbstyle}" Cursor="Hand" x:Name="SelectSection" SelectedValue="{Binding addPostModel.PostSection, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Tag">
                </ComboBox>
            </Grid>
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="&#xe62b;" FontFamily="pack://application:,,,/Talk;component/Asset/fonts/#iconfont" FontSize="25" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="1" Text="标题" Padding="10" Style="{StaticResource normalText}" Foreground="Black" HorizontalAlignment="Left"/>
                <Border Grid.Column="2" BorderThickness="2" BorderBrush="Black" CornerRadius="3" Background="White" Height="30" >
                    <TextBox Text="{Binding addPostModel.PostTitle, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource textBox}" Background="Transparent" Width="300" Padding="5"/>
                </Border>
            </Grid>
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="&#xe889;" FontFamily="pack://application:,,,/Talk;component/Asset/fonts/#iconfont" FontSize="25" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="1" Text="内容" Padding="10" Style="{StaticResource normalText}" Foreground="Black" HorizontalAlignment="Left"/>
            </Grid>
            <Border BorderThickness="2" BorderBrush="Black" CornerRadius="5" Background="White" >
                <TextBox Text="{Binding addPostModel.PostContent, UpdateSourceTrigger=PropertyChanged}" Height="120" Width="400" FontSize="15" Padding="10" TextWrapping="Wrap" AcceptsReturn="True" Background="Transparent" BorderThickness="0" HorizontalAlignment="Center" />
            </Border>
            <Button Content="发布" Style="{StaticResource login_view}" Width="60" Height="30" Margin="20" Background="#acb0af" Click="Add_Post"/>
        </StackPanel>
    </Grid>
</Page>
